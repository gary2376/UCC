"""
Django settings for DjangoTemplate project.

Generated by 'django-admin startproject' using Django 3.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import logging
import os.path
import tempfile
from datetime import timedelta
from pathlib import Path

import environ
from PIL import Image
from django.contrib.messages import constants as messages

root = environ.Path(__file__) - 2
env = environ.Env(
    # set casting, default value
    DEBUG=(bool, False)
)
# reading .env file
environ.Env.read_env(root() + '/.env')

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# 檔案上傳路徑
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
# 對應網址
MEDIA_URL = '/media/'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

# SECRET_KEY = env('SECRET_KEY')
SECRET_KEY = 'django-insecure-48hot9-3yhillsa!@g6!q2sb+xay!(rz(q6kt(f*7p#q)&#s@a'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env('DEBUG')

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'simpleui',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'app.apps.AppConfig',
    'debug_toolbar',
    'import_export',
    'django_cleanup.apps.CleanupConfig',
    'active_link',
    'corsheaders',
    'nplusone.ext.django',
    'rest_framework',
    'rest_framework_simplejwt'
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'nplusone.ext.django.NPlusOneMiddleware',
]

ROOT_URLCONF = 'DjangoTemplate.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django_settings_export.settings_export',
            ],
        },
    },
]

WSGI_APPLICATION = 'DjangoTemplate.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': env('DATABASE_NAME'),
#         'USER': env('DATABASE_USER'),
#         'PASSWORD': env('DATABASE_PASSWORD'),
#         'HOST': env('DATABASE_HOST', default='127.0.0.1'),
#         'PORT': env('DATABASE_PORT', default='3306'),
#     }
# }
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'HOST':'127.0.0.1',
        'PORT':'3308',
        'USER':'root',
        'PASSWORD':'',
        'NAME': 'django_template_db',
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_USER_MODEL = "app.User"
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Django Rest Framework
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
}

# Django rest framework JWT
SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=60),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=7),
}

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'zh-Hant'
LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale'),
    os.path.join(BASE_DIR, 'package-locale', 'admin'),
)

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = False  # 為方便顯示日期時間，且網站僅使用於單一時區，故資料庫中的時間不儲存時區

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'resources'),
)

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

SITE_NAME = env('SITE_NAME', default='Site')

SETTINGS_EXPORT = [
    'SITE_NAME'
]

# django-debug-toolbar 僅對這些 IP 顯示
INTERNAL_IPS = [
    '127.0.0.1'
]

# Email
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = env('EMAIL_HOST', default='smtp.mailtrap.io')
EMAIL_PORT = env('EMAIL_PORT', default='2525')
EMAIL_USE_TLS = env('EMAIL_USE_TLS', default=True)
EMAIL_USE_SSL = env('EMAIL_USE_SSL', default=False)
EMAIL_HOST_USER = env('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = env('EMAIL_HOST_PASSWORD')

MESSAGE_TAGS = {
    messages.DEBUG: 'alert-secondary',
    messages.INFO: 'alert-info',
    messages.SUCCESS: 'alert-success',
    messages.WARNING: 'alert-warning',
    messages.ERROR: 'alert-danger',
}

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'normal': {
            'format': '[%(asctime)s][%(levelname)s] %(name)s:%(lineno)d | %(message)s',
            'datefmt': '%Y-%m-%d %H:%M:%S',
        },
        'simple': {
            'format': '[%(asctime)s][%(levelname)s] %(message)s',
            'datefmt': '%Y-%m-%d %H:%M:%S',
        },
    },
    'filters': {
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',  # Default logs to stderr
            'formatter': 'simple',  # use the above "simple" formatter
            'filters': ['require_debug_true'],  # add filters
        },
    },
    'loggers': {
        '': {  # means "root logger"
            'handlers': ['console'],  # use the above "console" handler
            'level': 'INFO',  # logging level
        },
        # 'django': {
        #     'handlers': ['console'],
        #     'level': 'INFO',
        #     'propagate': False,
        # },
    },
}

if DEBUG:
    # 修正 django-debug-toolbar 無法載入 JS 檔案的問題
    # https://stackoverflow.com/a/64040603
    import mimetypes

    mimetypes.add_type("application/javascript", ".js", True)

    NPLUSONE_LOGGER = logging.getLogger('nplusone')
    NPLUSONE_LOG_LEVEL = logging.WARN

DATA_UPLOAD_MAX_MEMORY_SIZE = None
FILE_UPLOAD_MAX_MEMORY_SIZE = 5242880

SIMPLEUI_CONFIG = {
    'system_keep': False,  # 隱藏系統預設，使用自定義分類
    'menus': [
        {
            'name': 'ERP 企業資源規劃',
            'icon': 'fas fa-warehouse',
            'models': [
                {
                    'name': 'ERP 系統儀表板',
                    'icon': 'fas fa-chart-line',
                    'url': '/erp/clean/',
                },
                {
                    'name': '生豆入庫記錄',
                    'icon': 'fas fa-coffee',
                    'url': '/admin/app/greenbeaninboundrecord/',
                },
                {
                    'name': '原料倉管理',
                    'icon': 'fas fa-boxes',
                    'url': '/admin/app/rawmaterialwarehouserecord/',
                },
                {
                    'name': '月度統計',
                    'icon': 'fas fa-chart-bar',
                    'url': '/admin/app/rawmaterialmonthlysummary/',
                }
            ],
        },
        {
            'name': '用戶管理',
            'icon': 'fas fa-users',
            'models': [
                {
                    'name': '系統用戶',
                    'icon': 'fas fa-user',
                    'url': '/admin/app/user/'
                },
                {
                    'name': '管理員',
                    'icon': 'fas fa-user-shield',
                    'url': '/admin/app/adminuser/'
                },
                {
                    'name': '權限管理',
                    'icon': 'fas fa-shield-alt',
                    'url': '/erp/permissions/'
                }
            ]
        },
        {
            'name': '系統管理',
            'icon': 'fas fa-cogs',
            'models': [
                {
                    'name': '內容類型',
                    'icon': 'fas fa-list',
                    'url': '/admin/contenttypes/contenttype/',
                },
                {
                    'name': '管理日誌',
                    'icon': 'fas fa-history',
                    'url': '/admin/admin/logentry/',
                },
                {
                    'name': '會話管理',
                    'icon': 'fas fa-clock',
                    'url': '/admin/sessions/session/',
                }
            ]
        },
    ]
}

SIMPLEUI_HOME_INFO = False
SIMPLEUI_ANALYSIS = False
SIMPLEUI_HOME_ACTION = True
SIMPLEUI_DEFAULT = False  # 隱藏預設項目
SIMPLEUI_LOGOUT = False   # 隱藏登出按鈕
SIMPLEUI_LOGIN_LOGO = '/static/admin/simpleui-x/img/logo.png'

SIMPLEUI_HOME_QUICK = [
    {
        'title': '🏢 ERP 系統儀表板',
        'url': '/erp/dashboard/',
        'icon': 'fas fa-warehouse',
        'color': 'success'
    }
]

DEV = os.getenv('ENV') == 'development'

CORS_ALLOW_CREDENTIALS = True
CORS_ALLOWED_ORIGINS = [
    "http://localhost:8080",
    "http://localhost:8000",
    "http://localhost:5000",
]
CORS_ALLOW_HEADERS = [
    "accept",
    "accept-encoding",
    "authorization",
    "content-type",
    "dnt",
    "origin",
    "user-agent",
    "x-csrftoken",
    "x-requested-with",
    "access-control-request-method",
    "access-control-allow-origin",
]
CORS_ORIGIN_WHITELIST = [
    "",  # CDN url
]

LOGIN_URL = '/'

USES_S3 = os.getenv('STORAGE') == 's3'
if USES_S3:
    STATIC_URL = ""
    STATICFILES_STORAGE = 'app.storages.StaticStorage'
    AWS_STORAGE_BUCKET_NAME = 's3.bucket.name'
else:
    CACHES = {
        'default': {
            'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
            'LOCATION': os.path.join(tempfile.gettempdir(), 'django_cache')
        }
    }

Image.MAX_IMAGE_PIXELS = None
